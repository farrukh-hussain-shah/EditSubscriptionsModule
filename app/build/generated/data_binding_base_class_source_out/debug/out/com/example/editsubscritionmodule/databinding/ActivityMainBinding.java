// Generated by view binder compiler. Do not edit!
package com.example.editsubscritionmodule.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.editsubscritionmodule.R;
import com.github.angads25.toggle.widget.LabeledSwitch;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnDelete;

  @NonNull
  public final LabeledSwitch btnSwitch;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ShapeableImageView icIcon;

  @NonNull
  public final LinearLayoutCompat llInfo;

  @NonNull
  public final LinearLayoutCompat llInfoSub;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final MaterialTextView materialTextView;

  @NonNull
  public final MaterialTextView tv;

  @NonNull
  public final MaterialTextView tvActive;

  @NonNull
  public final MaterialTextView tvAmount;

  @NonNull
  public final MaterialTextView tvAmountValue;

  @NonNull
  public final MaterialTextView tvAppValue;

  @NonNull
  public final ShapeableImageView tvBack;

  @NonNull
  public final MaterialTextView tvCategory;

  @NonNull
  public final MaterialTextView tvCategoryValue;

  @NonNull
  public final MaterialTextView tvFrequency;

  @NonNull
  public final MaterialTextView tvFrequencyValue;

  @NonNull
  public final MaterialTextView tvPrice;

  @NonNull
  public final MaterialTextView tvRemindsMe;

  @NonNull
  public final MaterialTextView tvRemindsMeValue;

  @NonNull
  public final MaterialTextView tvSave;

  @NonNull
  public final MaterialTextView tvStartDate;

  @NonNull
  public final MaterialTextView tvStartDateValue;

  @NonNull
  public final MaterialTextView tvTitle;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull MaterialButton btnDelete,
      @NonNull LabeledSwitch btnSwitch, @NonNull ConstraintLayout constraintLayout,
      @NonNull ShapeableImageView icIcon, @NonNull LinearLayoutCompat llInfo,
      @NonNull LinearLayoutCompat llInfoSub, @NonNull ConstraintLayout main,
      @NonNull MaterialTextView materialTextView, @NonNull MaterialTextView tv,
      @NonNull MaterialTextView tvActive, @NonNull MaterialTextView tvAmount,
      @NonNull MaterialTextView tvAmountValue, @NonNull MaterialTextView tvAppValue,
      @NonNull ShapeableImageView tvBack, @NonNull MaterialTextView tvCategory,
      @NonNull MaterialTextView tvCategoryValue, @NonNull MaterialTextView tvFrequency,
      @NonNull MaterialTextView tvFrequencyValue, @NonNull MaterialTextView tvPrice,
      @NonNull MaterialTextView tvRemindsMe, @NonNull MaterialTextView tvRemindsMeValue,
      @NonNull MaterialTextView tvSave, @NonNull MaterialTextView tvStartDate,
      @NonNull MaterialTextView tvStartDateValue, @NonNull MaterialTextView tvTitle) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnSwitch = btnSwitch;
    this.constraintLayout = constraintLayout;
    this.icIcon = icIcon;
    this.llInfo = llInfo;
    this.llInfoSub = llInfoSub;
    this.main = main;
    this.materialTextView = materialTextView;
    this.tv = tv;
    this.tvActive = tvActive;
    this.tvAmount = tvAmount;
    this.tvAmountValue = tvAmountValue;
    this.tvAppValue = tvAppValue;
    this.tvBack = tvBack;
    this.tvCategory = tvCategory;
    this.tvCategoryValue = tvCategoryValue;
    this.tvFrequency = tvFrequency;
    this.tvFrequencyValue = tvFrequencyValue;
    this.tvPrice = tvPrice;
    this.tvRemindsMe = tvRemindsMe;
    this.tvRemindsMeValue = tvRemindsMeValue;
    this.tvSave = tvSave;
    this.tvStartDate = tvStartDate;
    this.tvStartDateValue = tvStartDateValue;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete;
      MaterialButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btn_switch;
      LabeledSwitch btnSwitch = ViewBindings.findChildViewById(rootView, id);
      if (btnSwitch == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.icIcon;
      ShapeableImageView icIcon = ViewBindings.findChildViewById(rootView, id);
      if (icIcon == null) {
        break missingId;
      }

      id = R.id.ll_info;
      LinearLayoutCompat llInfo = ViewBindings.findChildViewById(rootView, id);
      if (llInfo == null) {
        break missingId;
      }

      id = R.id.ll_info_sub;
      LinearLayoutCompat llInfoSub = ViewBindings.findChildViewById(rootView, id);
      if (llInfoSub == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.materialTextView;
      MaterialTextView materialTextView = ViewBindings.findChildViewById(rootView, id);
      if (materialTextView == null) {
        break missingId;
      }

      id = R.id.tv_;
      MaterialTextView tv = ViewBindings.findChildViewById(rootView, id);
      if (tv == null) {
        break missingId;
      }

      id = R.id.tv_active;
      MaterialTextView tvActive = ViewBindings.findChildViewById(rootView, id);
      if (tvActive == null) {
        break missingId;
      }

      id = R.id.tv_amount;
      MaterialTextView tvAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvAmount == null) {
        break missingId;
      }

      id = R.id.tv_amount_value;
      MaterialTextView tvAmountValue = ViewBindings.findChildViewById(rootView, id);
      if (tvAmountValue == null) {
        break missingId;
      }

      id = R.id.tv_app_value;
      MaterialTextView tvAppValue = ViewBindings.findChildViewById(rootView, id);
      if (tvAppValue == null) {
        break missingId;
      }

      id = R.id.tv_back;
      ShapeableImageView tvBack = ViewBindings.findChildViewById(rootView, id);
      if (tvBack == null) {
        break missingId;
      }

      id = R.id.tv_category;
      MaterialTextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_category_value;
      MaterialTextView tvCategoryValue = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryValue == null) {
        break missingId;
      }

      id = R.id.tv_frequency;
      MaterialTextView tvFrequency = ViewBindings.findChildViewById(rootView, id);
      if (tvFrequency == null) {
        break missingId;
      }

      id = R.id.tv_frequency_value;
      MaterialTextView tvFrequencyValue = ViewBindings.findChildViewById(rootView, id);
      if (tvFrequencyValue == null) {
        break missingId;
      }

      id = R.id.tv_price;
      MaterialTextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tv_reminds_me;
      MaterialTextView tvRemindsMe = ViewBindings.findChildViewById(rootView, id);
      if (tvRemindsMe == null) {
        break missingId;
      }

      id = R.id.tv_reminds_me_value;
      MaterialTextView tvRemindsMeValue = ViewBindings.findChildViewById(rootView, id);
      if (tvRemindsMeValue == null) {
        break missingId;
      }

      id = R.id.tv_save;
      MaterialTextView tvSave = ViewBindings.findChildViewById(rootView, id);
      if (tvSave == null) {
        break missingId;
      }

      id = R.id.tv_start_date;
      MaterialTextView tvStartDate = ViewBindings.findChildViewById(rootView, id);
      if (tvStartDate == null) {
        break missingId;
      }

      id = R.id.tv_start_date_value;
      MaterialTextView tvStartDateValue = ViewBindings.findChildViewById(rootView, id);
      if (tvStartDateValue == null) {
        break missingId;
      }

      id = R.id.tv_title;
      MaterialTextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnDelete, btnSwitch,
          constraintLayout, icIcon, llInfo, llInfoSub, main, materialTextView, tv, tvActive,
          tvAmount, tvAmountValue, tvAppValue, tvBack, tvCategory, tvCategoryValue, tvFrequency,
          tvFrequencyValue, tvPrice, tvRemindsMe, tvRemindsMeValue, tvSave, tvStartDate,
          tvStartDateValue, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
