// Generated by view binder compiler. Do not edit!
package com.example.editsubscritionmodule.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.editsubscritionmodule.R;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAppSelectBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShapeableImageView ivEnd;

  @NonNull
  public final ShapeableImageView ivStart;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final MaterialTextView tvName;

  @NonNull
  public final View view;

  private ItemAppSelectBinding(@NonNull ConstraintLayout rootView,
      @NonNull ShapeableImageView ivEnd, @NonNull ShapeableImageView ivStart,
      @NonNull ConstraintLayout main, @NonNull MaterialTextView tvName, @NonNull View view) {
    this.rootView = rootView;
    this.ivEnd = ivEnd;
    this.ivStart = ivStart;
    this.main = main;
    this.tvName = tvName;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAppSelectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAppSelectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_app_select, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAppSelectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivEnd;
      ShapeableImageView ivEnd = ViewBindings.findChildViewById(rootView, id);
      if (ivEnd == null) {
        break missingId;
      }

      id = R.id.ivStart;
      ShapeableImageView ivStart = ViewBindings.findChildViewById(rootView, id);
      if (ivStart == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.tvName;
      MaterialTextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ItemAppSelectBinding((ConstraintLayout) rootView, ivEnd, ivStart, main, tvName,
          view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
